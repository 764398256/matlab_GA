%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ---- 本脚本的作用是根据仿真得到的数据将单个频点对应的所有开关组合的S11参数图画在一张图上 ---- %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    % ---- 注释 ---- %
        % ---- 本脚本的主要作用是：
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % ---- 1.根据仿真得到的数据将单个频点对应的所有开关组合的S11参数图画在一张图上
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function getFigureForOneFrequencyPoint
%{ 
    1.加载开关组合文件
    2.使用for循环遍历开关组合里面的每个开关组合
    3.根据当前的开关组合得到当前的数据文件的名字，然后加载这个文件
    4.根据这个数据文件得到当前开关组合的S11参数图
%}
%% ---- clear and close
    clc;
    clear;
    close all;
%% ---- 加载开关组合数组文件
    SwitchArrayFor_S_Band;
%% ---- 加载fileDirectoryParameters.m脚本
    %{
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
            1.本脚本包含3个数组：
                第一个数组fileDirectoryOfLab对应的是实验室电脑的目录
                第二个数组fileDirectoryOfServer对应的是实验室服务器的目录
                第二个数组fileDirectoryOfThinkpad对应的是我的笔记本的目录

                使用的时候请根据使用环境，调用对应的数组

            2.每个数组包含5个元素：
                第一个元素hfssMatlabApiDirectory是HFSS-MATLAB-API所在目录
                第二个元素prjFileDirectory是工程文件保存目录
                第三个元素scriptFileDirectory是脚本文件保存目录
                第四个元素dataFileDirectory是HFSS输出数据的保存目录
                第五个元素hfssExecutePath是HFSS的执行路径

            3.之所这么做是因为在不同的运行环境，总是需要修改这些目录，
              因此将所有的目录统一在一个文件里面，
              并将同一个运行环境的目录保存在一个数组里面，
              这样执行文件只需要更改调用的数组即可，无需再修改原始目录
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
    %}
    fileDirectoryParameters_V2ForTest;
    %{
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
            此处之所以定义tmpfileDirectory，有两个优点：
                1.为了修改方便。更改运行环境之后，只需要将相应的数组赋值给tmpfileDirectory，
                  即可，无需多余的操作，极大地降低了操作的繁琐性。
                2.利用了封装的思想，使原数组对后面的操作不可见，保护了原数组的安全。
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
    %}
    tmpfileDirectory = fileDirectory;
%% ---- 定义颜色数组
    %{
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
            'k'：黑
            'r'：红
            'b'：蓝
            'g'：绿
            'm'：紫红
            'c'：蓝绿
            'y'：黄
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
    %}
    pltCols = ['k' 'r' 'b' 'g' 'm' 'c' 'y'];
    % ---- 得到pltCols的元素个数
    nCols = length(pltCols);
%% ---- 定义标记数组
    %{
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
            '^'：上三角
            'O'：圆形
            'S'：正方形
            '*'：星号
            '<'：左三角
            'X'：差号
            'D'：菱形
            '>'：右三角
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
    %}
    pltMark = ['^' 'O' 'S' 'X' '<' '*' 'D' '>'];
    % ---- 得到pltMark的元素个数
    nMark = length(pltMark);
%% ---- 定义legendArray
    legendArray = [];
%% ---- 得到所有开关组合
    for ii = 1:1:m % ---- 此处的m是SwitchArrayOfOneFrequencyPoint中的元素个数
        % ---- 得到当前开关组合
            myCurrentSwitchArray = SwitchArrayOfOneFrequencyPoint(ii, :);
        % ---- 定义文件名
            %{
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
                    之所以定义文件名是因为后面有多处用到
                        定义了之后，只需要修改此处的文件名
                        通过字符串的拼接就可以得到其他最终的文件名
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
            %}
            fileName = ['SwitchArray', num2str(myCurrentSwitchArray(15))];
        % ---- 加载数据文件
            tmpDataFile = [char(tmpfileDirectory(4)), '\', fileName, 'DataFile.m'];
        % ---- 加载数据文件
            %{ 
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
                    此处的的tmpDataFile来自模型执行脚本。
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
            %}
            run(tmpDataFile);
       %% ---- 得到指定开关组合的工作频率以及对应的S11参数
            % ---- 得到S11的最小值，以及对应的索引
                 %{ 
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        此处使用函数min()，参数是S，也就是S参数
                        min()函数有两个返回值：
                            Smin是S参数的最小值，是复数形式，需要对其转换
                            iMin是S参数最小值对应的索引，用以得到工作频率
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                [Smin, iMin] = min(S);
            % ---- 得到工作频率
                %{ 
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        1.iMin是S参数最小值对应的索引

                        2.因为HFSS导出的数据形式Hz，为了得到GHz，需要将得到的频率除以10^9
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}    
                freq = f(iMin) / 1e9;
            % ---- 得到实数格式的S11参数
                %{ 
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        由于HFSS输出的仿真参数为复数形式：S(1,:,:) = [9.608966E-001 -2.059262E-001i];，参见ModelExecuteFastDemoDataFile.m文件
                        因此，要想计算S11参数，需要对数据进行处理，将复数形式的S11参数转化为实数，然后才能相加，得到scores
                                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                % ----         转化公式          ---- %
                                % ---- 20*log10(abs(S(ii,:,:))) ---- %
                                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                s11 = 20*log10(abs(Smin));
            % ---- 输出当前开关组合
                fprintf('    该开关组合：');
                fprintf('%.0f ', myCurrentSwitchArray);
                fprintf('的工作频率是：%.2f，其对应的S11参数是：%.2f\n', freq, s11);
        %% ---- 画天线的S11随着Frequency变化的图形
            % ---- 调用画图命令，得到图形窗口
                %{ 
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        此处之所以要用figure(1)，是因为要将所有的S11参数图画到figure1上面
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                figure(1);
                hold on;
            % ---- 画S11曲线
                %{ 
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        1.x轴为频率，但是需要注意的是：频率f需要除以10^9，将其转化为GHz

                        2.y轴为S参数，需要将所有复数形式的S参数转化为实数形式：
                                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                % ----         转化公式          ---- %
                                % ---- 20*log10(abs(S(ii,:,:))) ---- %
                                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

                        3.[pltCols(mod(ii, nCols) + 1) '-']：根据ii，得到当前的颜色
                          并通过字符串的拼接，得到S11参数图的颜色和线型
                          '-'：代表实线
                          mod(ii, nCols) + 1：mod函数是nCols对ii取余，这样就可以避免ii的值超过了pltCols数组的索引，最后加一是为了避免出现0索引

                        4.'LineWidth', 1代表线宽为1
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                plot(f/1e9, 20*log10(abs(S)),[pltCols(mod(ii, nCols) + 1) '-'], 'LineWidth', 1);
            % ---- 画标记点
                % ---- 得到频率f数组中的元素个数
                    %{ 
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                            得到一个数组，数组中的第一个数是行数，第二个数是列数
                            频率f数组中的元素个数是第二个数，也即列数
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                    %}
                    sizeOfFrequency = size(f);
                    numOfFrequency = sizeOfFrequency(2);
                % ---- 定义步长
                    %{ 
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                            此处定义步长的意义是为了后面画标记点
                                隔一个步长取一个点，然后画标记点，这样画出来的图，就不会那么拥挤
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                    %}
                    pace = 3;
                % ---- 得到标记点的ff数组
                    %{ 
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                            从f的第一个元素起，隔步长pace取一个点得到ff数组
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                    %}
                    ff = f(1:pace:numOfFrequency);
                % ---- 得到标记点的ss数组
                    %{ 
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                            从s的第一个元素起，隔步长pace取一个点得到ss数组
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                    %}
                    ss = S(1:pace:numOfFrequency,:,:);
                % ---- 根据ff和ss画标记点
                    %{ 
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                            1.x轴为频率，但是需要注意的是：频率ff需要除以10^9，将其转化为GHz

                            2.y轴为S参数，需要将所有复数形式的S参数转化为实数形式：
                                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                    % ----         转化公式          ---- %
                                    % ---- 20*log10(abs(ss(ii,:,:))) ---- %
                                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

                            3.[pltCols(mod(ii, nCols) + 1) pltMark(mod(ii, nMark) + 1)]：根据ii，得到当前标记点的颜色
                              并通过字符串的拼接，得到标记点的符号
                              mod(ii, nCols) + 1：mod函数是nCols对ii取余，这样就可以避免ii的值超过了pltCols数组的索引，最后加一是为了避免出现0索引

                            4.'LineWidth', 1代表线宽为1
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                    %}
                    plot(ff/1e9, 20*log10(abs(ss)),[pltCols(mod(ii, nCols) + 1) pltMark(mod(ii, nMark) + 1)]);
            % ---- 画legend
                % ---- 得到legend
                    %{ 
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                            0.legend只需要一个点即可，因此随便取一个点，比如第5个点ff(5)和ss(5)

                            1.x轴为频率，但是需要注意的是：频率ff需要除以10^9，将其转化为GHz

                            2.y轴为S参数，需要将所有复数形式的S参数转化为实数形式：
                                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                    % ----         转化公式          ---- %
                                    % ---- 20*log10(abs(ss(ii,:,:))) ---- %
                                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

                            3.[pltCols(mod(ii, nCols) + 1) pltMark(mod(ii, nMark) + 1) '-']：根据ii，得到当前标记点的颜色
                              并通过字符串的拼接，得到标记点的符号
                              '-'：代表实线
                              mod(ii, nCols) + 1：mod函数是nCols对ii取余，这样就可以避免ii的值超过了pltCols数组的索引，最后加一是为了避免出现0索引

                            4.'LineWidth', 1代表线宽为1
                        ---- 注意 ----
                        ---- 注意 ----
                        ---- 注意 ----
                    %}
                    tmpH = plot(ff(5)/1e9, 20*log10(abs(ss(5))),[pltCols(mod(ii, nCols) + 1) pltMark(mod(ii, nMark) + 1) '-'], 'LineWidth', 1);
                % ---- 将legend添加到legendArray
                    legendArray(ii) = tmpH;
            % ---- x轴的名字
                xlabel('Frequency(GHz)');
            % ---- y轴的名字
                %{ 
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        为了得到下标效果，需要使用：S_{11}
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                ylabel('S_{11} (dB)');
            % ---- 保持图形界面
                hold on;
                % ---- 设置坐标轴
                %{ 
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        此处1.5和2.5不能写成：1.5e9,2.5e9，因为，上面f/1e9已经除了e9，所以，此时的坐标轴是1-10，而不是1e9-10e9
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                axis([2.7 3.7 -45 0]);
    end
    %% ---- 添加标记指示
        legend(legendArray, '开关组合3', '开关组合4', '开关组合19', '开关组合20');
end