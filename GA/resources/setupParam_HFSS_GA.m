%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ---- 本脚本用于储存可重构天线的所有已知参数 ---- %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    % ---- 单位：GHz
    
    %{
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
            此脚本包含求解频率setupFreq和扫描频率sweep，以及它们对应的HFSS形式的字符串名字
        ---- 注意 ----
        ---- 注意 ----
        ---- 注意 ----
    %}
    
%% ---- 声明全局变量
    global setupFreq startFreq stopFreq setupName sweepName objFreq;
%% ---- HFSS设置参数
    % ---- HFSS求解频率
        setupFreq = objFreq;
        % ---- 调用函数得到setupFreq的HFSS形式的字符串形式
            %{
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
                    一个数字的HFSS模式的字符串形式就是：
                        将一个数字转化为字符串
                            如果字符串里面有'.'，则将'.'替换为'_'
                                之所这样做是因为HFSS里面求解频率的命名不支持'.'，所以需要替换为'_'

                        例子：
                            5       ---->   5
                            5.64    ---->   5_64
        
                    函数的具体信息参见GetHFSSName.m
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
            %}
            setupFreqName = getHFSSName(setupFreq);
        % ---- 得到SetupName，通过字符串的拼接
            setupName = ['Setup' setupFreqName 'GHz'];

            
    % ---- HFSS扫频设置
        % ---- 扫频开始频率
            %{
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
                    此处之所以用四舍五入，是为了得到整数，HFSS计算速度更快
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
            %}
            startFreq = round(objFreq - 1);
            % ---- 判断startFreq的值
                %{
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        startFreq不能过小，因此，如果小于0.5，就设置为0.5
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                if startFreq <= 0.5
                    startFreq = 0.5;
                end
            % ---- 调用函数得到startFreq的HFSS形式的字符串形式
                %{
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        一个数字的HFSS模式的字符串形式就是：
                            将一个数字转化为字符串
                                如果字符串里面有'.'，则将'.'替换为'_'
                                    之所这样做是因为HFSS里面求解频率的命名不支持'.'，所以需要替换为'_'

                            例子：
                                5       ---->   5
                                5.64    ---->   5_64

                        函数的具体信息参见GetHFSSName.m
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}
                startFreqName = getHFSSName(startFreq);
        % ---- 扫频截止频率
            %{
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
                    此处之所以用四舍五入，是为了得到整数，HFSS计算速度更快
                ---- 注意 ----
                ---- 注意 ----
                ---- 注意 ----
            %}
            stopFreq = round(objFreq + 1);
            % ---- 调用函数得到stopFreq的HFSS形式的字符串形式
                %{
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                        一个数字的HFSS模式的字符串形式就是：
                            将一个数字转化为字符串
                                如果字符串里面有'.'，则将'.'替换为'_'
                                    之所这样做是因为HFSS里面求解频率的命名不支持'.'，所以需要替换为'_'

                            例子：
                                5       ---->   5
                                5.64    ---->   5_64

                        函数的具体信息参见GetHFSSName.m
                    ---- 注意 ----
                    ---- 注意 ----
                    ---- 注意 ----
                %}  
                stopFreqName = getHFSSName(stopFreq);
        % ---- 得到sweepName
            sweepName = ['Fast' startFreqName 'to' stopFreqName 'GHz'];